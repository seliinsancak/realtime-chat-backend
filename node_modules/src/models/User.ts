import mongoose from "mongoose";

const preferencesSchema = new mongoose.Schema({
  theme: { type: String, enum: ["light", "dark"], default: "light" },
  lang: { type: String, enum: ["tr", "en"], default: "tr" },
  notifications: { type: Boolean, default: true }
});

const userSchema = new mongoose.Schema({
  username: { type: String, required: true, unique: true },
  email: { type: String, required: true, unique: true, lowercase: true },
  password: { type: String, required: true },
  name: { type: String },
  bio: { type: String },
  description: { type: String },
  role: { type: String, enum: ["user","moderator","admin"], default: "user" },
  authProvider: { type: String, default: "password" },
  emailVerified: { type: Boolean, default: false },
  passwordResetVerified: { type: Boolean, default: false },
  isVerified: { type: Boolean, default: false },
  profileImage: { type: String, default: null },
  coverImage: { type: String, default: null },
  rating: { type: Number, default: 0 },
  fcmToken: { type: String, default: "" },
  agoraUid: { type: Number, default: 0 },
  token: { type: String, default: "" },
  lastSeen: { type: Date, default: null },
  status: { type: String, enum: ["online","offline","busy","away"], default: "offline" },
  preferences: { type: preferencesSchema, default: () => ({}) },
  createdAt: { type: Date, default: Date.now },
  updatedAt: { type: Date, default: Date.now }
});

userSchema.index({ email: 1 }, { unique: true });
userSchema.index({ username: 1 }, { unique: true });
userSchema.index({ role: 1 });
userSchema.index({ status: 1 });
userSchema.index({ emailVerified: 1 });

export const User = mongoose.model("User", userSchema);